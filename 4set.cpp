#include <iostream>
#include <iostream>
#include <map>
#include <iostream>
#include <vector>
#include <algorithm>
#include <utility>
#include <set>
using namespace std;

//24554
//2. Множество всех натуральных чисел из диапазона [a, b]
//4. Нечетные по значению элементы
//5. Элементы, принадлежащие диапазону [c, d]
//5. 1) A-B
//      (т.е есть в А и нет в В)
//   2) A ∩ /B
//      /B (т.е все элементы универсального множества кроме тех, которые входят в B)
//      ∩ - пересечение (т.е. входят в оба)
//4. Четные по индексу элементы

int main() {
    setlocale(LC_ALL, "rus");
    set<int> S;
    multiset<int> mS;

//-----------------------------------------------------------------------------------------

    cout<<"\n---Задание №1. Множество всех натуральных чисел из диапазона [a, b].---\n";
    cout<<"Введите начало диапазона a:\n";
    int a;
    cin>>a;
    cout<<"Введите конец диапазона b:\n";
    int b;
    cin>>b;

    for (int i = a; i != b+1; i++) //создание универсального множества [от,до]
        S.insert(i);

    cout<<"Множество натуральных чисел из диапазона ["<<a<<","<<b<<"]:" << endl;
    for (auto it = S.begin(); it != S.end(); it++)
        cout << *it << ' ';

//-----------------------------------------------------------------------------------------

    cout<<"\n\n---Задание №2. Нечетные по значению элементы.---\n";
    set<int> A;
    for (auto it = S.begin(); it != S.end(); it++) //создание множества А
        if(*it % 2 != 0)
            A.insert(*it);

    cout<<"Множество A:" << endl;
    for (auto it = A.begin(); it != A.end(); it++)
        cout << *it << ' ';

//-----------------------------------------------------------------------------------------

    cout<<"\n\n---Задание №3. Элементы, принадлежащие диапазону [c, d]---\n";
    set<int> B;
    cout<<"Введите начало диапазона c:\n";
    int c;
    cin>>c;
    cout<<"Введите конец диапазона d:\n";
    int d;
    cin>>d;

    for (auto it = S.begin(); it != S.end(); it++) //создание множества B
        if (*it >= c  && *it <= d)
            B.insert(*it);

    cout<<"Множество B:" << endl;
    for (auto it = B.begin(); it != B.end(); it++)
        cout << *it << ' ';


//-----------------------------------------------------------------------------------------

    cout<<"\n\n---Задание №4. ( A-B ) и ( A ∩ /B ) ---\n";

    //Типичный способ проверки наличия во многих контейнерах STL:
    //const bool is_in = container.find(element)) != container.end()

    //5. 1) A-B
    //      (т.е есть в А и нет в В)
    //   2) A ∩ /B
    //      /B (т.е все элементы универсального множества кроме тех, которые входят в B)
    //      ∩ - пересечение (т.е. входят в оба)

    set<int> C;
    set<int> D;

    for (auto it = A.begin(); it != A.end(); it++) //создание множества A-B
        if ( (A.find(*it) != A.end() )  && (B.find(*it) == B.end() ) )
            C.insert(*it);

    cout<<"Множество 1 ( A-B ):" << endl;
    for (auto it = C.begin(); it != C.end(); it++)
        cout << *it << ' ';

    for (auto it = S.begin(); it != S.end(); it++) //создание множества A ∩ /B
        if (A.find(*it) != A.end())
            if (B.find(*it) == B.end())
                D.insert(*it);

    cout<<"\nМножество 2 ( A ∩ /B ):" << endl;
    for (auto it = D.begin(); it != D.end(); it++)
        cout << *it << ' ';


//-----------------------------------------------------------------------------------------

    cout<<"\n\n---Задание №5. Четные по индексу элементы---\n";

    cout<<"\nВывод результата от задания 4:" << endl;
    int i = 0;
    for (auto it = D.begin(); it != D.end(); it++, i++)
        if (i %2 == 0)
            cout << *it << ' ';





    cout << "\n" << endl;
    return 0;
}
